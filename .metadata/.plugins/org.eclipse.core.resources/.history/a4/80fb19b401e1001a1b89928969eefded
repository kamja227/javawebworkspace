package com.bit.model.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.bit.Mysql.MysqlConnection;
import com.bit.model.dto.GradeDto;

public class GradeDao {

private Connection conn;	
private PreparedStatement pstmt;	
private ResultSet rs;
	
	public List<GradeDto>getGradeList( int studentIdx){
		 
		List<GradeDto> list= new ArrayList<GradeDto>();
		
		try {
			String sql="select testDate,subjectTitle,score from grade where studentIdx=?";
			conn=MysqlConnection.getConnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,studentIdx);
			rs=pstmt.executeQuery();
			while(rs.next()) {
				GradeDto bean =new GradeDto();
				bean.setTestDate(rs.getDate("testDate"));
				bean.setSubjectTitle(rs.getString("subjectTitle"));
				bean.setScore(rs.getString("score"));
				list.add(bean);
			}
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			
			try {
				
				if(rs!=null)	rs.close();
				if(pstmt!=null)	pstmt.close();
				if(conn!=null)	conn.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			
		}
		
		return list;
	}
	
	public ArrayList<GradeDto> classAll(int classIdx) {
		String sql = "select Grade.*, student.name as studentName from Grade "
				+ "join Student on grade.studentIdx = student.studentIdx "
				+ "where deleted=0 and student.classIdx=? "
				+ "order by testDate desc, studentName asc";
		
		ArrayList<GradeDto> list = new ArrayList<GradeDto>();
		try {
			conn=MysqlConnection.getConnection();
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,classIdx);
			
			rs=pstmt.executeQuery();
			while(rs.next()) {
				GradeDto bean =new GradeDto();
				bean.setTestDate(rs.getDate("testDate"));
				bean.setSubjectTitle(rs.getString("subjectTitle"));
				bean.setScore(rs.getString("score"));
				list.add(bean);
			}
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			
			try {
				
				if(rs!=null)	rs.close();
				if(pstmt!=null)	pstmt.close();
				if(conn!=null)	conn.close();
			} catch (SQLException e) {
				
				e.printStackTrace();
			}
			
		}
		
		return list;
	}

	
	
}
